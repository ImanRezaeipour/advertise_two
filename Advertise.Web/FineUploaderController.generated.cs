// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments and CLS compliance
// 0108: suppress "Foo hides inherited member Foo. Use the new keyword if hiding was intended." when a controller and its abstract parent are both processed
// 0114: suppress "Foo.BarController.Baz()' hides inherited member 'Qux.BarController.Baz()'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword." when an action (with an argument) overrides an action in a parent controller
#pragma warning disable 1591, 3008, 3009, 0108, 0114
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Advertise.Web.Controllers
{
    public partial class FineUploaderController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected FineUploaderController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Remove()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Remove);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> RemoveAttachment()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveAttachment);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> RemoveVideo()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveVideo);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToAttachmentWeb()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToAttachmentWeb);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToImageWeb()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToImageWeb);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToImageCatalogWeb()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToImageCatalogWeb);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToVideoWeb()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToVideoWeb);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public FineUploaderController Actions { get { return MVC.FineUploader; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "FineUploader";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "FineUploader";
        [GeneratedCode("T4MVC", "2.0")]
        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Remove = "Remove";
            public readonly string RemoveAttachment = "RemoveAttachment";
            public readonly string RemoveVideo = "RemoveVideo";
            public readonly string SaveToAttachmentWeb = "SaveToAttachmentWeb";
            public readonly string SaveToImageWeb = "SaveToImageWeb";
            public readonly string SaveToImageCatalogWeb = "SaveToImageCatalogWeb";
            public readonly string SaveToVideoWeb = "SaveToVideoWeb";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Remove = "Remove";
            public const string RemoveAttachment = "RemoveAttachment";
            public const string RemoveVideo = "RemoveVideo";
            public const string SaveToAttachmentWeb = "SaveToAttachmentWeb";
            public const string SaveToImageWeb = "SaveToImageWeb";
            public const string SaveToImageCatalogWeb = "SaveToImageCatalogWeb";
            public const string SaveToVideoWeb = "SaveToVideoWeb";
        }


        static readonly ActionParamsClass_Remove s_params_Remove = new ActionParamsClass_Remove();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Remove RemoveParams { get { return s_params_Remove; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Remove
        {
            public readonly string uuid = "uuid";
        }
        static readonly ActionParamsClass_RemoveAttachment s_params_RemoveAttachment = new ActionParamsClass_RemoveAttachment();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveAttachment RemoveAttachmentParams { get { return s_params_RemoveAttachment; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveAttachment
        {
            public readonly string uuid = "uuid";
        }
        static readonly ActionParamsClass_RemoveVideo s_params_RemoveVideo = new ActionParamsClass_RemoveVideo();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_RemoveVideo RemoveVideoParams { get { return s_params_RemoveVideo; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_RemoveVideo
        {
            public readonly string uuid = "uuid";
        }
        static readonly ActionParamsClass_SaveToAttachmentWeb s_params_SaveToAttachmentWeb = new ActionParamsClass_SaveToAttachmentWeb();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveToAttachmentWeb SaveToAttachmentWebParams { get { return s_params_SaveToAttachmentWeb; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveToAttachmentWeb
        {
            public readonly string qqfile = "qqfile";
        }
        static readonly ActionParamsClass_SaveToImageWeb s_params_SaveToImageWeb = new ActionParamsClass_SaveToImageWeb();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveToImageWeb SaveToImageWebParams { get { return s_params_SaveToImageWeb; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveToImageWeb
        {
            public readonly string qqfile = "qqfile";
            public readonly string imageType = "imageType";
        }
        static readonly ActionParamsClass_SaveToImageCatalogWeb s_params_SaveToImageCatalogWeb = new ActionParamsClass_SaveToImageCatalogWeb();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveToImageCatalogWeb SaveToImageCatalogWebParams { get { return s_params_SaveToImageCatalogWeb; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveToImageCatalogWeb
        {
            public readonly string qqfile = "qqfile";
            public readonly string imageType = "imageType";
        }
        static readonly ActionParamsClass_SaveToVideoWeb s_params_SaveToVideoWeb = new ActionParamsClass_SaveToVideoWeb();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SaveToVideoWeb SaveToVideoWebParams { get { return s_params_SaveToVideoWeb; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SaveToVideoWeb
        {
            public readonly string qqfile = "qqfile";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_FineUploaderController : Advertise.Web.Controllers.FineUploaderController
    {
        public T4MVC_FineUploaderController() : base(Dummy.Instance) { }

        [NonAction]
        partial void RemoveOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid uuid);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> Remove(System.Guid uuid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Remove);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uuid", uuid);
            RemoveOverride(callInfo, uuid);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void RemoveAttachmentOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid uuid);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> RemoveAttachment(System.Guid uuid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveAttachment);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uuid", uuid);
            RemoveAttachmentOverride(callInfo, uuid);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void RemoveVideoOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Guid uuid);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> RemoveVideo(System.Guid uuid)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.RemoveVideo);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "uuid", uuid);
            RemoveVideoOverride(callInfo, uuid);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void SaveToAttachmentWebOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToAttachmentWeb(System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToAttachmentWeb);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "qqfile", qqfile);
            SaveToAttachmentWebOverride(callInfo, qqfile);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void SaveToImageWebOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile, Advertise.Core.Types.ImageProcessType imageType);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToImageWeb(System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile, Advertise.Core.Types.ImageProcessType imageType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToImageWeb);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "qqfile", qqfile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "imageType", imageType);
            SaveToImageWebOverride(callInfo, qqfile, imageType);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void SaveToImageCatalogWebOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile, Advertise.Core.Types.ImageProcessType imageType);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToImageCatalogWeb(System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile, Advertise.Core.Types.ImageProcessType imageType)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToImageCatalogWeb);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "qqfile", qqfile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "imageType", imageType);
            SaveToImageCatalogWebOverride(callInfo, qqfile, imageType);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

        [NonAction]
        partial void SaveToVideoWebOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile);

        [NonAction]
        public override System.Threading.Tasks.Task<System.Web.Mvc.ActionResult> SaveToVideoWeb(System.Collections.Generic.IEnumerable<System.Web.HttpPostedFileBase> qqfile)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SaveToVideoWeb);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "qqfile", qqfile);
            SaveToVideoWebOverride(callInfo, qqfile);
            return System.Threading.Tasks.Task.FromResult(callInfo as System.Web.Mvc.ActionResult);
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591, 3008, 3009, 0108, 0114
