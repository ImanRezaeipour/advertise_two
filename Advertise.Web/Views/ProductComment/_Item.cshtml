@* Generator: MvcView GeneratePrettyNames: true *@
@using Advertise.Core.Extensions
@using Advertise.Service.Managers.File
@using Advertise.Service.Services.Permissions
@model Advertise.Core.Models.ProductComment.ProductCommentViewModel
<div class="landing-items nov-item-height-032">
    <div class="product-item column landing-column">
        <div class="nov-item-header">
            <div class="action-section without-share">
                @if (User.IsInRole(PermissionConst.CanProductCommentMyEdit) || User.IsInRole(PermissionConst.CanProductCommentDeleteAjax) || User.IsInRole(PermissionConst.CanProductCommentEditApprove) || User.IsInRole(PermissionConst.CanProductCommentEditReject) || User.IsInRole(PermissionConst.CanUserViolationCreate))
                {
                    <div class="item-edit-wrapper">
                        <i class="fa fa-pencil-square"></i>
                        <ul class="item-edit-list">
                            @if (User.IsInRole(PermissionConst.CanProductCommentMyEdit))
                            {
                                <li>
                                    <a href="@Url.Action(MVC.ProductComment.Edit(Model.Id))">
                                        <span>@Admin.Edit</span>
                                        <i class="fa fa-pencil fa-flip-horizontal"></i>
                                    </a>
                                </li>
                            }
                            @if (User.IsInRole(PermissionConst.CanProductCommentDeleteAjax))
                            {
                                <li>
                                    <a href="javascript:void(0)" data-on-click="removeConfirm" data-param="@(Model.IsMine ? Url.Action(MVC.ProductComment.MyDeleteAjax(Model.Id)) : Url.Action(MVC.ProductComment.DeleteAjax(Model.Id)))">
                                        <span>@Admin.Delete</span>
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </li>
                            }
                            @if (User.IsInRole(PermissionConst.CanProductCommentEditApprove))
                            {
                                <li>
                                    <a href="javascript:void(0)" data-on-click="ajaxSimple" data-param="@Url.Action(MVC.ProductComment.ApproveAjax(Model.Id))">
                                        <span>@Admin.Approve</span>
                                        <i class="fa fa-check-circle"></i>
                                    </a>
                                </li>
                            }
                            @if (User.IsInRole(PermissionConst.CanProductCommentEditReject))
                            {
                                <li>
                                    <a href="javascript:void(0)" data-on-click="ajaxSimple" data-param="@Url.Action(MVC.ProductComment.RejectAjax(Model.Id))">
                                        <span>@Admin.Ignore</span>
                                        <i class="fa fa-times-circle"></i>
                                    </a>
                                </li>
                            }
                            @if (User.IsInRole(PermissionConst.CanUserViolationCreate))
                            {
                                <li>
                                    <a href="javascript:void(0)">
                                        <span>@Admin.Report</span>
                                        <i class="fa fa-file-text-o"></i>
                                    </a>
                                </li>
                            }
                        </ul>
                    </div>
                }
            </div>
        </div>
        <div class="nov-item-body">
            <div class="image-section">
                <div class="product-preview-actions">
                    <figure class="product-preview-image">
                        <a @if (Model.ProductImageFileName != null) { <text> href="@Url.Action(MVC.Product.Detail(Model.ProductCode, Model.ProductTitle.Replace(" ","-")))" </text> }>
                            <div class="item-preview-image">
                                <img src="@if (Model.ProductImageFileName != null) {<text>@FileConst.ImagesWebPath.PlusWord(Model.ProductImageFileName)</text>} else {<text>@FileConst.NoPreview</text>}" alt="@Model.ProductTitle">
                            </div>
                        </a>
                    </figure>
                </div>
            </div>
            <div class="caption-section">
                <a class="novinak-title-link" href="@Url.Action(MVC.Product.Detail(Model.ProductCode, Model.ProductTitle.CastToSlug()))">
                    <p class="novinak-title text-header">@Model.Body</p>
                </a>
            </div>
            <div class="info-section">
                <div class="top-part">
                    <a href="@Url.Action(MVC.Product.Detail(Model.ProductCode, Model.ProductTitle.CastToSlug()))">
                        <p>@Model.ProductTitle</p>
                    </a>
                </div>
                <div class="middle-part">
                    <p><i class="fa fa-calendar-check-o"></i> <span>@Admin.InsertDate.PlusWord(":")</span></p>
                </div>
                <div class="bottom-part">
                    <p>@Model.CreatedOn.CastToRegularDate()</p>
                </div>
            </div>
        </div>
        <div class="nov-item-footer">
            <hr class="line-separator item-footer">
            <div class="overview-section">
                <div class="image-part">
                    <figure class="user-avatar small">
                        <a @if (Model.UserAvatar != null) { <text> href="@Url.Action(MVC.User.Detail(Model.UserUserName))" </text>   }>
                            <div class="novinak-image">
                                <img src="@if (Model.UserAvatar != null) {<text>@FileConst.ImagesWebPath.PlusWord(Model.UserAvatar)</text>} else {<text>@FileConst.NoAvatarPth</text>}" alt="@Model.UserDisplayName">
                            </div>
                        </a>
                    </figure>
                </div>
                <div class="caption-part">
                    <a href="@Url.Action(MVC.User.Detail(Model.UserUserName))" class="tooltipster" title="@Model.UserDisplayName">
                        <p class="text-header tiny">@Model.UserFullName</p>
                    </a>
                </div>
            </div>
            <div class="toggle-section">
                <div class="likes-wrapper">
                    <input type="hidden" value="@Model.Id" name="commentId" id="commentId" />
                    <p class="product-detail-eh detail-heart tooltip" title="@Admin.Likes">
                        <a @if (User.Identity.IsAuthenticated) { <text> href="javascript:void(0)" </text>   } else { <text> href="@Url.Action(MVC.Account.EmailRegister())" </text>   }>
                            <i class="fa @if (Model.InitLike) {<text>fa-heart</text>} else {<text>fa-heart-o</text>}"></i>
                            <span>@Model.LikeCount</span>
                        </a>
                    </p>
                    <div class="clearfix"></div>
                </div>
            </div>
        </div>
        <div class="clearboth"></div>
    </div>
</div>